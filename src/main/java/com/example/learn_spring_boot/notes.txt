다양한 개발 환경

local(dev)
qa
stage
prod


옛날에 배포하는 방법
1. 자바 설치
2 was 설치
3. WAR(Web ARchive)로 만들어서 배포

Embadded Server
* Tomcat같은 서버가 이미 jar에 존재
1. 자바 설치
2. JAR 파일 실행

C:\Users\webbizz\IdeaProjects\springBootStudy\target\learn-spring-boot-0.0.1-SNAPSHOT.jar


// 스프링부트 actuator
배포 중인 것을 모니터링하고 관리

여러 엔드 포인트
beans : 어플리케이션에 포함된 모든 스프링 빈의 목록을 볼 수 있음
health: 어플의 상태 정보
metrics: 어플의 메트릭스
mappings: 어플에 설정된 모든 요청 매핑 관련 세부사항 확인 가능

스프링부트 actuator 사용법
1. actuator 의존성 추가
2. 서버 켜기
3. http://localhost:8080/actuator 입력

결과값
{
  "_links": {
    "self": {
      "href": "http://localhost:8080/actuator",
      "templated": false
    },
    "health": {
      "href": "http://localhost:8080/actuator/health",
      "templated": false
    },
    "health-path": {
      "href": "http://localhost:8080/actuator/health/{*path}",
      "templated": true
    }
  }
}
4. actuator의 더 많은 기능을 사용하고 싶으면 application.properties에서 기능 사용 설정 필요
// 모든 엔드포인트 사용
management.endpoints.web.exposure.exclude=*

// 특정 엔드포인트만 사용
management.endpoints.web.exposure.exclude=metrics, health

http://localhost:8080/actuator/metrics/http.server.requests